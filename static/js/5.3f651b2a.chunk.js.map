{"version":3,"sources":["components/Typography.js","components/Page.js","utils/colors.js","demos/chartjs.js","components/Widget/NumberWidget.js","components/Widget/IconWidget.js","components/Widget/index.js","assets/img/products/product_640-1.jpg","assets/img/products/product_640-2.jpg","assets/img/products/product_640-3.jpg","assets/img/products/product_640-4.jpg","assets/img/products/product_640-5.jpg","assets/img/products/product_640-6.jpg","assets/img/users/100_6.jpg","assets/img/users/100_7.jpg","assets/img/users/100_8.jpg","assets/img/users/100_9.jpg","assets/img/users/100_10.jpg","assets/img/users/100_11.jpg","assets/img/users/100_12.jpg","assets/img/users/100_13.jpg","assets/img/users/100_14.jpg","components/HorizontalAvatarList.js","components/MapWithBubbles.js","components/SupportTicket.js","components/UserProgressTable.js","demos/dashboardPage.js","pages/DashboardPage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","_Users_ajaypalaniappan_dekstop_GH_Projects_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","_Users_ajaypalaniappan_dekstop_GH_Projects_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","_Users_ajaypalaniappan_dekstop_GH_Projects_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","__webpack_require__","d","__webpack_exports__","getColor","getThemeColors","availableColor","arguments","undefined","window","getComputedStyle","document","documentElement","getPropertyValue","concat","getStackLineChart","stackLineChartOptions","chart_js__WEBPACK_IMPORTED_MODULE_0__","chart_js__WEBPACK_IMPORTED_MODULE_0___default","n","utils_colors__WEBPACK_IMPORTED_MODULE_1__","labels","data","canvas","gradient","getContext","createLinearGradient","addColorStop","ChartJS","helpers","color","alpha","rgbString","datasets","label","borderColor","backgroundColor","fill","tooltips","intersect","animation","duration","scales","xAxes","display","yAxes","legend","NumberWidget","subtitle","number","_ref$progress","progress","value","objectWithoutProperties","react_default","Card","body","CardText","CardTitle","Progress","style","height","IconWidget","bgColor","Icon","icon","iconProps","defineProperty","inverse","CardBody","size","CardSubtitle","Widget_NumberWidget","Widget_IconWidget","module","exports","HorizontalAvatarList","avatars","avatarProps","reversed","leng","count","i","avatar","isFirstItem","react","Avatar","id","src","zIndex","border","marginLeft","marginBottom","marginTop","UncontrolledTooltip","delay","show","hide","target","cityScale","scaleLinear","domain","range","Component","statusMap","open","closed","pending","SupportTicket","date","text","status","onClick","Media","left","heading","right","Button","defualtProps","AvatarWithBadge","withBadge","position","UserProgressTable","headers","usersData","Table","responsive","hover","item","chartjs","product1Image","product2Image","product3Image","product4Image","product5Image","product6Image","user1Image","user2Image","user3Image","user4Image","user5Image","user6Image","user7Image","user8Image","user9Image","user10Image","user11Image","user12Image","user13Image","user14Image","bar","stack","options","mode","stacked","doughnut","animateScale","animateRotate","line","scaleLabel","labelString","gridLines","today","Date","DuraSum","getFullYear","getMonth","getDate","DashboardPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","PatData","dur","concount","connection_count","setState","_this2","scrollTo","fetch","method","then","response","json","object","Duration","Dsum","catch","err","console","log","primaryColor","pd","Row","Col","lg","md","sm","xs","Widget","es_Card","CardHeader","es","ListGroup","flush","ListGroupItem","index_esm","Badge","Array","isArray","friend","ts","Connection_Start","Disconnected_At","React"],"mappings":"6IAIMA,SAAS,CACbC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,EAAG,IACHC,KAAM,IACNC,WAAY,eAKRC,EAAa,SAAAC,GAAiD,IAE9DC,EAFqBC,EAAyCF,EAA9CG,IAAUC,EAAoCJ,EAApCI,UAAWC,EAAyBL,EAAzBK,KAASC,EAAgBC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,4BAC5DS,EAAUC,IAAWH,OAAAI,EAAA,EAAAJ,CAAA,GAAGF,IAASA,GAAQD,GAW/C,OAPEH,EADEC,KAEQA,GAAOjB,EAAOoB,GACbpB,EAAOoB,GAEP,KAGNO,EAAAC,EAAAC,cAACb,EAADM,OAAAQ,OAAA,GAAcT,EAAd,CAAyBF,UAAWK,MAS7CV,EAAWiB,aAAe,CACxBX,KAAM,KAGON,8GCtCTkB,EAAMC,IAAGC,OAAO,QAEhBC,EAAO,SAAApB,GAOP,IANJqB,EAMIrB,EANJqB,MACAC,EAKItB,EALJsB,YACKpB,EAIDF,EAJJG,IACAC,EAGIJ,EAHJI,UACAmB,EAEIvB,EAFJuB,SACGjB,EACCC,OAAAiB,EAAA,EAAAjB,CAAAP,EAAA,sDACES,EAAUQ,EAAIQ,EAAE,OAAQrB,GAE9B,OACEsB,EAAAb,EAAAC,cAACZ,EAADK,OAAAQ,OAAA,CAAKX,UAAWK,GAAaH,GAC3BoB,EAAAb,EAAAC,cAAA,OAAKV,UAAWa,EAAIU,EAAE,WACnBN,GAA0B,kBAAVA,EACfK,EAAAb,EAAAC,cAACc,EAAA,EAAD,CAAYvB,KAAK,KAAKD,UAAWa,EAAIU,EAAE,UACpCN,GAGDA,EAEHC,GACCI,EAAAb,EAAAC,cAACe,EAAA,EAAD,CAAYzB,UAAWa,EAAIU,EAAE,eAC3BD,EAAAb,EAAAC,cAACgB,EAAA,EAAD,aACCR,EAAYS,QACXT,EAAYU,IAAI,SAAAC,EAAmBC,GAAnB,IAAGC,EAAHF,EAAGE,KAAMC,EAATH,EAASG,OAAT,OACdV,EAAAb,EAAAC,cAACgB,EAAA,EAAD,CAAgBO,IAAKH,EAAOE,OAAQA,GACjCD,OAMZZ,IAkBPH,EAAKJ,aAAe,CAClBb,IAAK,MACLkB,MAAO,IAGMD,wCClEfkB,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAwBO,IAAMD,EAAW,WAAgC,IAA/BE,EAA+BC,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAd,UACxC,MAAsB,qBAAXE,OACF,KAGKA,OACXC,iBAAiBC,SAASC,iBAC1BC,iBAFW,KAAAC,OAEWR,KAKdD,EAAiB,iBAAM,CAClC,UACA,YACA,UACA,OACA,UACA,6CC1CFJ,EAAAC,EAAAC,EAAA,sBAAAY,IAAAd,EAAAC,EAAAC,EAAA,sBAAAa,IAAA,IAAAC,EAAAhB,EAAA,KAAAiB,EAAAjB,EAAAkB,EAAAF,GAAAG,EAAAnB,EAAA,KAGac,EAAoB,SAAApD,GAAA,IAAG0D,EAAH1D,EAAG0D,OAAQC,EAAX3D,EAAW2D,KAAX,OAAsB,SAAAC,GACrD,IACIC,EADQD,EAAOE,WAAW,MACXC,qBAAqB,EAAG,EAAG,EAAG,KAgBjD,OAfAF,EAASG,aACP,EACAC,IAAQC,QACLC,MAAM,WACNC,MAAM,GACNC,aAELR,EAASG,aACP,EACAC,IAAQC,QACLC,MAAM,WACNC,MAAM,IACNC,aAGE,CACLX,SACAY,SAAU,CACR,CACEX,OACAY,MAAO,mBACPC,YAAa/B,YAAS,WACtBgC,gBAAiBZ,EACjBa,KAAM,cAMDrB,EAAwB,CACnCsB,SAAU,CACRC,WAAW,GAEbC,UAAW,CACTC,SAAU,GAEZC,OAAQ,CACNC,MAAO,CACL,CACEC,SAAS,IAGbC,MAAO,CAAC,CAAED,SAAS,KAErBE,OAAQ,CACNF,SAAS,sHC7CPG,EAAe,SAAApF,GAOf,IANJqB,EAMIrB,EANJqB,MACAgE,EAKIrF,EALJqF,SACAC,EAIItF,EAJJsF,OACAnB,EAGInE,EAHJmE,MAGIoB,EAAAvF,EAFJwF,SAAYC,EAERF,EAFQE,MAAOlB,EAEfgB,EAFehB,MAChBjE,EACCC,OAAAmF,EAAA,EAAAnF,CAAAP,EAAA,kDACJ,OACE2F,EAAA9E,EAAAC,cAAC8E,EAAA,EAADrF,OAAAQ,OAAA,CAAM8E,MAAI,GAAKvF,GACbqF,EAAA9E,EAAAC,cAAA,OAAKV,UAAU,kCACbuF,EAAA9E,EAAAC,cAACgF,EAAA,EAAD,CAAU3F,IAAI,OACZwF,EAAA9E,EAAAC,cAACf,EAAA,EAAD,CAAYK,UAAU,QACpBuF,EAAA9E,EAAAC,cAAA,cAASO,IAEXsE,EAAA9E,EAAAC,cAACf,EAAA,EAAD,CAAYK,UAAU,yBAAyBiF,IAEjDM,EAAA9E,EAAAC,cAACiF,EAAA,EAAD,CAAW3F,UAAS,QAAA+C,OAAUgB,IAAUmB,IAE1CK,EAAA9E,EAAAC,cAACkF,EAAA,EAAD,CAAUP,MAAOA,EAAOtB,MAAOA,EAAO8B,MAAO,CAAEC,OAAQ,SACvDP,EAAA9E,EAAAC,cAACgF,EAAA,EAAD,CAAU3F,IAAI,MAAMC,UAAU,kCAC5BuF,EAAA9E,EAAAC,cAACf,EAAA,EAAD,CAAYI,IAAI,OAAOC,UAAU,8BAC9BmE,GAEHoB,EAAA9E,EAAAC,cAACf,EAAA,EAAD,CAAYI,IAAI,OAAOC,UAAU,+BAC9BqF,EADH,QA+BRL,EAAapE,aAAe,CAC1BK,MAAO,GACPgE,SAAU,GACVC,OAAQ,EACRnB,MAAO,UACPqB,SAAU,CACRC,MAAO,EACPlB,MAAO,KAIIa,kDCjETe,EAAa,SAAAnG,GAQb,IAPJoG,EAOIpG,EAPJoG,QACMC,EAMFrG,EANJsG,KACAC,EAKIvG,EALJuG,UACAlF,EAIIrB,EAJJqB,MACAgE,EAGIrF,EAHJqF,SACAjF,EAEIJ,EAFJI,UACGE,EACCC,OAAAmF,EAAA,EAAAnF,CAAAP,EAAA,+DACES,EAAUC,IAAW,YAAaN,EAAdG,OAAAiG,EAAA,EAAAjG,CAAA,SAAA4C,OACjBiD,GAAYA,IAErB,OACET,EAAA9E,EAAAC,cAAC8E,EAAA,EAADrF,OAAAQ,OAAA,CAAM0F,SAAO,EAACrG,UAAWK,GAAaH,GACpCqF,EAAA9E,EAAAC,cAAC4F,EAAA,EAAD,CAAUtG,UAAU,mBAClBuF,EAAA9E,EAAAC,cAACuF,EAAD9F,OAAAQ,OAAA,CAAM4F,KAAM,IAAQJ,KAEtBZ,EAAA9E,EAAAC,cAAC4F,EAAA,EAAD,KACEf,EAAA9E,EAAAC,cAACiF,EAAA,EAAD,KAAY1E,GACZsE,EAAA9E,EAAAC,cAAC8F,EAAA,EAAD,KAAevB,MAcvBc,EAAWnF,aAAe,CACxBoF,QAAS,UACTE,KAAM,OACNC,UAAW,CAAEI,KAAM,KAGNR,QC9Cf7D,EAAAC,EAAAC,EAAA,sBAAAqE,IAAAvE,EAAAC,EAAAC,EAAA,sBAAAsE,+h/MCAAC,EAAAC,QAAiB1E,EAAA1C,EAAuB,+DCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,+DCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,+DCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,+DCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,+DCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,+DCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,uDCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,uDCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,uDCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,uDCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,wDCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,wDCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,wDCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,wDCAxCmH,EAAAC,QAAiB1E,EAAA1C,EAAuB,wKCKlCqH,SAAuB,SAAAjH,GAMvB,IALCE,EAKDF,EALJG,IACA+G,EAIIlH,EAJJkH,QACAC,EAGInH,EAHJmH,YACAC,EAEIpH,EAFJoH,SACG9G,EACCC,OAAAmF,EAAA,EAAAnF,CAAAP,EAAA,4CACAqH,EAAOD,EAAWF,EAAQnF,OAAS,EAAI,EACrCuF,EAAQF,EAAW,kBAAMC,KAAS,kBAAMA,KAE9C,OACE1B,EAAA9E,EAAAC,cAACZ,EAADK,OAAAQ,OAAA,CAAKX,UAAU,6BAAgCE,GAC5C4G,GACCA,EAAQlF,IAAI,SAAAC,EAAmBsF,GAAM,IAAtBC,EAAsBvF,EAAtBuF,OAAQrF,EAAcF,EAAdE,KACfD,EAAQoF,IACRG,EAAoB,IAANF,EAEpB,OACE5B,EAAA9E,EAAAC,cAAC4G,EAAA,SAAD,CAAUrF,IAAKH,GACbyD,EAAA9E,EAAAC,cAAC6G,EAAA,EAADpH,OAAAQ,OAAA,GACMoG,EADN,CAEES,GAAE,+BAAAzE,OAAiCjB,GACnC2F,IAAKL,EACLvB,MAAO,CACL6B,OAAQ5F,EACR6F,OAAQ,iBACRC,YAAaP,IAAgB,GAC7BQ,aAAc,OACdC,UAAU,aAIX/F,GACDwD,EAAA9E,EAAAC,cAACqH,EAAA,EAAD,CACEC,MAAO,CAAEC,KAAM,EAAGC,KAAM,GACxBC,OAAM,+BAAApF,OAAiCjB,IACtCC,SAsBnB8E,EAAqBjG,aAAe,CAClCb,IAAK,MACL+G,QAAS,GACTC,YAAa,GACbC,UAAU,GAGGH,iDCxDTuB,EAAYC,cACfC,OAAO,CAAC,EAAG,UACXC,MAAM,CAAC,EAAG,QAEWC,8CCXlBC,EAAY,CAChBC,KAAM,OACNC,OAAQ,QACRC,QAAS,WAGLC,EAAgB,SAAAjJ,GAQhB,IAPJwH,EAOIxH,EAPJwH,OACArF,EAMInC,EANJmC,KACA+G,EAKIlJ,EALJkJ,KACAC,EAIInJ,EAJJmJ,KACAC,EAGIpJ,EAHJoJ,OAEG9I,GACCN,EAFJqJ,QAEI9I,OAAAmF,EAAA,EAAAnF,CAAAP,EAAA,qDACJ,OACE2F,EAAA9E,EAAAC,cAAA,MAASR,EACPqF,EAAA9E,EAAAC,cAACwI,EAAA,EAAD,CAAOlJ,UAAU,OACfuF,EAAA9E,EAAAC,cAACwI,EAAA,EAAD,CAAOC,MAAI,EAACnJ,UAAU,QACpBuF,EAAA9E,EAAAC,cAAC6G,EAAA,EAAD,CAAQE,IAAKL,KAEf7B,EAAA9E,EAAAC,cAACwI,EAAA,EAAD,CAAOzD,MAAI,GACTF,EAAA9E,EAAAC,cAACwI,EAAA,EAAD,CAAOE,SAAO,EAACrJ,IAAI,KAAKC,UAAU,OAC/B+B,GAEHwD,EAAA9E,EAAAC,cAAA,KAAGV,UAAU,kBACXuF,EAAA9E,EAAAC,cAAA,aAAQoI,KAGZvD,EAAA9E,EAAAC,cAACwI,EAAA,EAAD,CAAOG,OAAK,EAACrJ,UAAU,qBACrBuF,EAAA9E,EAAAC,cAAC4I,EAAA,EAAD,CACEvF,MAAM,OACN/D,UAAS,wBAAA+C,OAA0B0F,EAAUO,KAE5CA,KAIPzD,EAAA9E,EAAAC,cAACwI,EAAA,EAAD,KACE3D,EAAA9E,EAAAC,cAAA,KAAGV,UAAU,cAAc+I,MAenCF,EAAcU,aAAe,CAC3BnC,OAAQ,GACRrF,KAAM,GACN+G,KAAM,GACNC,KAAM,GACNC,OAAQ,UACRC,QAAS,cAGIJ,8BC7DTW,EAAkBC,YAAU,CAChCC,SAAU,eACV3F,MAAO,WAFe0F,CAGrBlC,KAEGoC,EAAoB,SAAA/J,GAA0C,IAAvCgK,EAAuChK,EAAvCgK,QAASC,EAA8BjK,EAA9BiK,UAAc3J,EAAgBC,OAAAmF,EAAA,EAAAnF,CAAAP,EAAA,yBAClE,OACE2F,EAAA9E,EAAAC,cAACoJ,EAAA,EAAD3J,OAAAQ,OAAA,CAAOoJ,YAAU,EAACC,OAAK,GAAK9J,GAC1BqF,EAAA9E,EAAAC,cAAA,aACE6E,EAAA9E,EAAAC,cAAA,MAAIV,UAAU,4CACX4J,EAAQhI,IAAI,SAACqI,EAAMnI,GAAP,OAAiByD,EAAA9E,EAAAC,cAAA,MAAIuB,IAAKH,GAAQmI,OAGnD1E,EAAA9E,EAAAC,cAAA,aACGmJ,EAAUjI,IAAI,SAAAC,EAAmCC,GAAnC,IAAGsF,EAAHvF,EAAGuF,OAAQrF,EAAXF,EAAWE,KAAM+G,EAAjBjH,EAAiBiH,KAAM1D,EAAvBvD,EAAuBuD,SAAvB,OACbG,EAAA9E,EAAAC,cAAA,MAAIuB,IAAKH,GACPyD,EAAA9E,EAAAC,cAAA,MAAIV,UAAU,4BACZuF,EAAA9E,EAAAC,cAAC8I,EAAD,CAAiB/B,IAAKL,KAExB7B,EAAA9E,EAAAC,cAAA,MAAIV,UAAU,4BAA4B+B,GAC1CwD,EAAA9E,EAAAC,cAAA,MAAIV,UAAU,4BAA4B8I,GAC1CvD,EAAA9E,EAAAC,cAAA,MAAIV,UAAU,4BACZuF,EAAA9E,EAAAC,cAACkF,EAAA,EAAD,CAAUP,MAAOD,EAAUS,MAAO,CAAEC,OAAQ,MAE9CP,EAAA9E,EAAAC,cAAA,MAAIV,UAAU,4BAA4BoF,EAA1C,WAmBZuE,EAAkB/I,aAAe,CAC/BgJ,QAAS,GACTC,UAAW,IAGEF,kZCgKFO,IAhMFC,IAOAC,IAOAC,IAOAC,IAOAC,IAOAC,IASCC,IAKAC,IAKAC,IAKAC,IAKAC,IAKAC,KAKAC,KAKAC,KAKAC,KAKAC,KAKAC,KAKAC,KAKAC,KAKAC,KAQAb,IAMAC,IAMAC,IAMAC,IAMAC,IAMAC,KAUAL,IASAC,IASAC,IAiBW,CACrBY,IAAK,CACHhI,KAAM,CACJD,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEY,SAAU,CACR,CACEC,MAAO,wBACPE,gBAAiB,UACjBmH,MAAO,UACPjI,KAAM,CAAC,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,MAEnD,CACEY,MAAO,wBACPE,gBAAiB,UACjBmH,MAAO,UACPjI,KAAM,CAAC,IAAO,IAAO,IAAO,IAAQ,IAAO,IAAO,QAIxDkI,QAAS,CACPxK,MAAO,CACL4D,SAAS,EACTkE,KAAM,gCAERxE,SAAU,CACRmH,KAAM,QACNlH,WAAW,GAEbuF,YAAY,EACZhF,OAAQ,CACNF,SAAS,GAEXF,OAAQ,CACNC,MAAO,CACL,CACE+G,SAAS,EACT9G,SAAS,IAGbC,MAAO,CACL,CACE6G,SAAS,EACT9G,SAAS,OAMnB+G,SAAU,CACRrI,KAAM,CACJW,SAAU,CACR,CACEX,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvBc,gBAAiB,CACf,UACA,UACA,UACA,UACA,WAEFF,MAAO,cAGXb,OAAQ,CAAC,MAAO,SAAU,SAAU,QAAS,SAE/CmI,QAAS,CACP1B,YAAY,EACZhF,OAAQ,CACNF,SAAS,GAEX5D,MAAO,CACL4D,SAAS,EACTkE,KAAM,2BAERtE,UAAW,CACToH,cAAc,EACdC,eAAe,KAIrBC,KAAM,CACJxI,KAAM,CACJD,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEY,SAAU,CACR,CACEC,MAAO,wBACPC,YAAa,UACbC,gBAAiB,UACjBd,KAAM,CAAC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,MAG1C,CACEY,MAAO,wBACPC,YAAa,UACbC,gBAAiB,UACjBd,KAAM,CAAC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,QAI9CkI,QAAS,CACP1B,YAAY,EACZhF,OAAQ,CACNF,SAAS,GAEX5D,MAAO,CACL4D,SAAS,EACTkE,KAAM,sCAERxE,SAAU,CACRC,WAAW,EACXkH,KAAM,WAER1B,MAAO,CACL0B,KAAM,SAER/G,OAAQ,CACNC,MAAO,CACL,CACEoH,WAAY,CACVnH,SAAS,EACToH,YAAa,SAEfC,UAAW,CACTrH,SAAS,KAIfC,MAAO,CACL,CACE6G,SAAS,EACTK,WAAY,CACVnH,SAAS,EACToH,YAAa,SAEfC,UAAW,CACTrH,SAAS,4HCjTjBsH,GAAQ,IAAIC,KAOdC,IANa,IAAID,KACnBD,GAAMG,cACNH,GAAMI,WACNJ,GAAMK,UAAY,GAGR,IACRtF,GAAQ,EACNuF,eAEJ,SAAAA,EAAYC,GAAO,IAAAC,EAAAxM,OAAAyM,EAAA,EAAAzM,CAAA0M,KAAAJ,GAAA,OAEjBE,EAAAxM,OAAA2M,EAAA,EAAA3M,CAAA0M,KAAA1M,OAAA4M,EAAA,EAAA5M,CAAAsM,GAAAO,KAAAH,KAAMH,KACDO,MAAQ,CACXC,QAAS,GACTC,IAAK,GACLC,SAAU,GANKT,oEAWdjI,EAAS2I,GACZR,KAAKS,SAAS,CACZH,IAAKzI,EACL0I,SAAUC,gDAGM,IAAAE,EAAAV,KAElBnK,OAAO8K,SAAS,EAAG,GAEnBC,MAAM,sEAAuE,CAC3EC,OAAU,QAEXC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACJL,EAAKD,SAAS,CACZJ,QAASU,IAEXL,EAAKN,MAAMC,QAAQtL,IAAI,SAAAkM,GACrBzB,IAAWA,KAAWyB,EAAOC,SAC7B7G,OAEFqG,EAAKS,KAAK3B,GAAQnF,MAGnB+G,MAAM,SAAAC,GAASC,QAAQC,IAAIF,sCAM5B,IAAMG,EAAehM,YAAS,WACPA,YAAS,aAChC8L,QAAQC,IAAI,MAAOvB,KAAKI,MAAME,KAC9B,IAAMmB,EAAKzB,KAAKI,MAAMC,QAEtB,OAGE3H,EAAA9E,EAAAC,cAACM,EAAA,EAAD,CACEhB,UAAU,gBACViB,MAAM,kBAGNsE,EAAA9E,EAAAC,cAAC6N,GAAA,EAAD,KAGEhJ,EAAA9E,EAAAC,cAAC8N,GAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC5BrJ,EAAA9E,EAAAC,cAACmO,EAAA,EAAD,CACE5N,MAAM,2BACNgE,SAAS,QACTC,OAAQ2H,KAAKI,MAAME,IACnBpJ,MAAM,YACNqB,SACC,CACCC,MAAO,OAMbE,EAAA9E,EAAAC,cAAC8N,GAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC5BrJ,EAAA9E,EAAAC,cAACmO,EAAA,EAAD,CACE5N,MAAM,iBACNgE,SAAS,QACTC,OAAQ2H,KAAKI,MAAMG,SACnBrJ,MAAM,YACNqB,SAAU,CACRC,MAAO,OAMbE,EAAA9E,EAAAC,cAAC8N,GAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC5BrJ,EAAA9E,EAAAC,cAACmO,EAAA,EAAD,CACE5N,MAAM,mBACNgE,SAAS,QACTC,OAAO,GACPnB,MAAM,YACNqB,SAAU,CACRC,MAAO,OAMbE,EAAA9E,EAAAC,cAAC8N,GAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC5BrJ,EAAA9E,EAAAC,cAACmO,EAAA,EAAD,CACE5N,MAAM,YACNgE,SAAS,QACTC,OAAO,GACPnB,MAAM,YACNqB,SAAU,CACRC,MAAO,QAOfE,EAAA9E,EAAAC,cAAC6N,GAAA,EAAD,KACEhJ,EAAA9E,EAAAC,cAAC8N,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAC7BrJ,EAAA9E,EAAAC,cAACoO,GAAA,EAAD,KACEvJ,EAAA9E,EAAAC,cAACqO,GAAA,EAAD,0BACqB,IACnBxJ,EAAA9E,EAAAC,cAAA,SAAOV,UAAU,8BAAjB,cAEFuF,EAAA9E,EAAAC,cAAC4F,GAAA,EAAD,KACEf,EAAA9E,EAAAC,cAACsO,GAAA,KAAD,CAAMzL,KAAM2G,GAAQ6B,KAAKxI,KAAMkI,QAASvB,GAAQ6B,KAAKN,aAK3DlG,EAAA9E,EAAAC,cAAC8N,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAC7BrJ,EAAA9E,EAAAC,cAACoO,GAAA,EAAD,KACEvJ,EAAA9E,EAAAC,cAACqO,GAAA,EAAD,sBACAxJ,EAAA9E,EAAAC,cAAC4F,GAAA,EAAD,KACEf,EAAA9E,EAAAC,cAACsO,GAAA,IAAD,CAAKzL,KAAM2G,GAAQqB,IAAIhI,KAAMkI,QAASvB,GAAQqB,IAAIE,WAEpDlG,EAAA9E,EAAAC,cAACuO,GAAA,EAAD,CAAWC,OAAK,GACd3J,EAAA9E,EAAAC,cAACyO,GAAA,EAAD,KACE5J,EAAA9E,EAAAC,cAAC0O,GAAA,EAAD,CAAe7I,KAAM,GAAIxC,MAAOsK,IADlC,iBACiE,IAC/D9I,EAAA9E,EAAAC,cAAC2O,GAAA,EAAD,CAAOtL,MAAM,aAAb,UAEFwB,EAAA9E,EAAAC,cAACyO,GAAA,EAAD,KACE5J,EAAA9E,EAAAC,cAAC0O,GAAA,EAAD,CAAe7I,KAAM,GAAIxC,MAAOsK,IADlC,qBAEQ9I,EAAA9E,EAAAC,cAAC2O,GAAA,EAAD,CAAOtL,MAAM,aAAb,UAERwB,EAAA9E,EAAAC,cAACyO,GAAA,EAAD,KACE5J,EAAA9E,EAAAC,cAAC0O,GAAA,EAAD,CAAa7I,KAAM,GAAIxC,MAAOsK,IADhC,mBACiE,IAC/D9I,EAAA9E,EAAAC,cAAC2O,GAAA,EAAD,CAAOtL,MAAM,aAAb,SAEFwB,EAAA9E,EAAAC,cAACyO,GAAA,EAAD,KACE5J,EAAA9E,EAAAC,cAAC0O,GAAA,EAAD,CAAY7I,KAAM,GAAIxC,MAAOsK,IAD/B,0BAEQ9I,EAAA9E,EAAAC,cAAC2O,GAAA,EAAD,CAAOtL,MAAM,aAAb,cAsPhBwB,EAAA9E,EAAAC,cAAC6N,GAAA,EAAD,KACEhJ,EAAA9E,EAAAC,cAAA,SAAOV,UAAU,uBACbuF,EAAA9E,EAAAC,cAAA,aACI6E,EAAA9E,EAAAC,cAAA,UACI6E,EAAA9E,EAAAC,cAAA,uBACA6E,EAAA9E,EAAAC,cAAA,8BACA6E,EAAA9E,EAAAC,cAAA,6BACA6E,EAAA9E,EAAAC,cAAA,wBAGR6E,EAAA9E,EAAAC,cAAA,aACK4O,MAAMC,QAAQjB,IAAOA,EAAG1M,IAAI,SAAA4N,GACzB,OAAOjK,EAAA9E,EAAAC,cAAA,MAAIuB,IAAKuN,EAAOC,IACnBlK,EAAA9E,EAAAC,cAAA,UAAK8O,EAAOC,IACZlK,EAAA9E,EAAAC,cAAA,UAAK8O,EAAOE,kBACZnK,EAAA9E,EAAAC,cAAA,UAAK8O,EAAOG,iBACZpK,EAAA9E,EAAAC,cAAA,UAAK8O,EAAOzB,wBA1ZV6B,IAAMpH,WAyanBiE","file":"static/js/5.3f651b2a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import ChartJS from 'chart.js';\nimport { getColor } from 'utils/colors';\n\nexport const getStackLineChart = ({ labels, data }) => canvas => {\n  const ctx = canvas.getContext('2d');\n  let gradient = ctx.createLinearGradient(0, 0, 0, 240);\n  gradient.addColorStop(\n    0,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(1)\n      .rgbString()\n  );\n  gradient.addColorStop(\n    1,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(0.2)\n      .rgbString()\n  );\n\n  return {\n    labels,\n    datasets: [\n      {\n        data,\n        label: 'My First dataset',\n        borderColor: getColor('primary'),\n        backgroundColor: gradient,\n        fill: 'origin',\n      },\n    ],\n  };\n};\n\nexport const stackLineChartOptions = {\n  tooltips: {\n    intersect: false,\n  },\n  animation: {\n    duration: 0,\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n    yAxes: [{ display: false }],\n  },\n  legend: {\n    display: false,\n  },\n  // elements: {\n  //   line: {\n  //     tension: 0, // disables bezier curves\n  //   },\n  // },\n};\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardText, CardTitle, Progress } from 'reactstrap';\nimport Typography from '../Typography';\n\nconst NumberWidget = ({\n  title,\n  subtitle,\n  number,\n  color,\n  progress: { value, label },\n  ...restProps\n}) => {\n  return (\n    <Card body {...restProps}>\n      <div className=\"d-flex justify-content-between\">\n        <CardText tag=\"div\">\n          <Typography className=\"mb-0\">\n            <strong>{title}</strong>\n          </Typography>\n          <Typography className=\"mb-0 text-muted small\">{subtitle}</Typography>\n        </CardText>\n        <CardTitle className={`text-${color}`}>{number}</CardTitle>\n      </div>\n      <Progress value={value} color={color} style={{ height: '8px' }} />\n      <CardText tag=\"div\" className=\"d-flex justify-content-between\">\n        <Typography tag=\"span\" className=\"text-left text-muted small\">\n          {label}\n        </Typography>\n        <Typography tag=\"span\" className=\"text-right text-muted small\">\n          {value}%\n        </Typography>\n      </CardText>\n    </Card>\n  );\n};\n\nNumberWidget.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  number: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]),\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'light',\n    'dark',\n  ]),\n  progress: PropTypes.shape({\n    value: PropTypes.number,\n    label: PropTypes.string,\n  }),\n};\n\nNumberWidget.defaultProps = {\n  title: '',\n  subtitle: '',\n  number: 0,\n  color: 'primary',\n  progress: {\n    value: 0,\n    label: '',\n  },\n};\n\nexport default NumberWidget;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\n\nconst IconWidget = ({\n  bgColor,\n  icon: Icon,\n  iconProps,\n  title,\n  subtitle,\n  className,\n  ...restProps\n}) => {\n  const classes = classNames('cr-widget', className, {\n    [`bg-${bgColor}`]: bgColor,\n  });\n  return (\n    <Card inverse className={classes} {...restProps}>\n      <CardBody className=\"cr-widget__icon\">\n        <Icon size={50} {...iconProps} />\n      </CardBody>\n      <CardBody>\n        <CardTitle>{title}</CardTitle>\n        <CardSubtitle>{subtitle}</CardSubtitle>\n      </CardBody>\n    </Card>\n  );\n};\n\nIconWidget.propTypes = {\n  bgColor: PropTypes.string,\n  icon: PropTypes.component,\n  iconProps: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nIconWidget.defaultProps = {\n  bgColor: 'primary',\n  icon: 'span',\n  iconProps: { size: 50 },\n};\n\nexport default IconWidget;\n","export { default as NumberWidget } from './NumberWidget';\nexport { default as IconWidget } from './IconWidget';\n","module.exports = __webpack_public_path__ + \"static/media/product_640-1.a9a0ec64.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-2.da0b0457.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-3.64ed27c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-4.2110d8cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-5.bf8840bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-6.f9249755.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_6.de882536.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_7.1dce100f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_8.a4be0bbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_9.798c02eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_10.56d054ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_11.336faadc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_12.1e0889af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_13.63265e92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_14.595b8cbd.jpg\";","import Avatar from 'components/Avatar';\nimport React, { Fragment } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport PropTypes from 'utils/propTypes';\n\nconst HorizontalAvatarList = ({\n  tag: Tag,\n  avatars,\n  avatarProps,\n  reversed,\n  ...restProps\n}) => {\n  let leng = reversed ? avatars.length + 1 : 1;\n  const count = reversed ? () => leng-- : () => leng++;\n\n  return (\n    <Tag className=\"d-flex align-items-center\" {...restProps}>\n      {avatars &&\n        avatars.map(({ avatar, name }, i) => {\n          const index = count();\n          const isFirstItem = i === 0;\n\n          return (\n            <Fragment key={index}>\n              <Avatar\n                {...avatarProps}\n                id={`HorizontalAvatarList-avatar-${index}`}\n                src={avatar}\n                style={{\n                  zIndex: index,\n                  border: '3px solid #fff',\n                  marginLeft: !isFirstItem && -20,\n                  marginBottom: '20px',\n                  marginTop:'20px'\n                }}\n              />\n\n              {!!name && (\n                <UncontrolledTooltip\n                  delay={{ show: 0, hide: 0 }}\n                  target={`HorizontalAvatarList-avatar-${index}`}>\n                  {name}\n                </UncontrolledTooltip>\n              )}\n            </Fragment>\n          );\n        })}\n    </Tag>\n  );\n};\n\nHorizontalAvatarList.propTypes = {\n  tag: PropTypes.node,\n  avatars: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n  avatarProps: PropTypes.object,\n  reversed: PropTypes.bool,\n};\n\nHorizontalAvatarList.defaultProps = {\n  tag: 'div',\n  avatars: [],\n  avatarProps: {},\n  reversed: false,\n};\n\nexport default HorizontalAvatarList;\n","import world50m from 'assets/geo-data/world-50m.json';\nimport cities from 'assets/geo-data/world-most-populous-cities.json';\nimport { scaleLinear } from 'd3-scale';\nimport React, { Component } from 'react';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Markers,\n  ZoomableGroup,\n} from 'react-simple-maps';\nimport { getColor } from 'utils/colors';\n\nconst cityScale = scaleLinear()\n  .domain([0, 37843000])\n  .range([1, 25]);\n\nclass BubbleMap extends Component {\n  state = {\n    cities,\n  };\n\n  render() {\n    // const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary');\n    const lightColor = getColor('light');\n\n    return (\n      <ComposableMap\n        projectionConfig={{ scale: 205 }}\n        width={980}\n        height={551}\n        style={{\n          width: '100%',\n          height: 'auto',\n        }}\n      >\n        <ZoomableGroup center={[0, 20]} disablePanning>\n          <Geographies geography={world50m}>\n            {(geographies, projection) =>\n              geographies.map(\n                (geography, i) =>\n                  geography.id !== 'ATA' && (\n                    <Geography\n                      key={i}\n                      geography={geography}\n                      projection={projection}\n                      style={{\n                        default: {\n                          fill: lightColor,\n                          stroke: lightColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        hover: {\n                          fill: secondaryColor,\n                          stroke: secondaryColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        pressed: {\n                          fill: secondaryColor,\n                          stroke: secondaryColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                      }}\n                    />\n                  ),\n              )\n            }\n          </Geographies>\n          <Markers>\n            {this.state.cities.map((city, i) => (\n              <Marker key={i} marker={city}>\n                <circle\n                  cx={0}\n                  cy={0}\n                  r={cityScale(city.population)}\n                  fill={secondaryColor}\n                  stroke={secondaryColor}\n                  strokeWidth=\"2\"\n                />\n              </Marker>\n            ))}\n          </Markers>\n        </ZoomableGroup>\n      </ComposableMap>\n    );\n  }\n}\n\nexport default BubbleMap;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Media, Button } from 'reactstrap';\n\nimport Avatar from './Avatar';\n\nconst statusMap = {\n  open: 'info',\n  closed: 'muted',\n  pending: 'success',\n};\n\nconst SupportTicket = ({\n  avatar,\n  name,\n  date,\n  text,\n  status,\n  onClick,\n  ...restProps\n}) => {\n  return (\n    <div {...restProps}>\n      <Media className=\"m-2\">\n        <Media left className=\"mr-2\">\n          <Avatar src={avatar} />\n        </Media>\n        <Media body>\n          <Media heading tag=\"h6\" className=\"m-0\">\n            {name}\n          </Media>\n          <p className=\"text-muted m-0\">\n            <small>{date}</small>\n          </p>\n        </Media>\n        <Media right className=\"align-self-center\">\n          <Button\n            color=\"link\"\n            className={`text-capitalize text-${statusMap[status]}`}\n          >\n            {status}\n          </Button>\n        </Media>\n      </Media>\n      <Media>\n        <p className=\"text-muted\">{text}</p>\n      </Media>\n    </div>\n  );\n};\n\nSupportTicket.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  date: PropTypes.date,\n  text: PropTypes.string,\n  status: PropTypes.oneOf(['open', 'closed', 'pending']),\n  onClick: PropTypes.func,\n};\n\nSupportTicket.defualtProps = {\n  avatar: '',\n  name: '',\n  date: '',\n  text: '',\n  status: 'pending',\n  onClick: () => {},\n};\n\nexport default SupportTicket;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Table, Progress } from 'reactstrap';\n\nimport Avatar from 'components/Avatar';\n\nimport withBadge from 'hocs/withBadge';\n\nconst AvatarWithBadge = withBadge({\n  position: 'bottom-right',\n  color: 'success',\n})(Avatar);\n\nconst UserProgressTable = ({ headers, usersData, ...restProps }) => {\n  return (\n    <Table responsive hover {...restProps}>\n      <thead>\n        <tr className=\"text-capitalize align-middle text-center\">\n          {headers.map((item, index) => <th key={index}>{item}</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {usersData.map(({ avatar, name, date, progress }, index) => (\n          <tr key={index}>\n            <td className=\"align-middle text-center\">\n              <AvatarWithBadge src={avatar} />\n            </td>\n            <td className=\"align-middle text-center\">{name}</td>\n            <td className=\"align-middle text-center\">{date}</td>\n            <td className=\"align-middle text-center\">\n              <Progress value={progress} style={{ height: 5 }} />\n            </td>\n            <td className=\"align-middle text-center\">{progress}%</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nUserProgressTable.propTypes = {\n  headers: PropTypes.node,\n  usersData: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n      date: PropTypes.date,\n    })\n  ),\n};\n\nUserProgressTable.defaultProps = {\n  headers: [],\n  usersData: [],\n};\n\nexport default UserProgressTable;\n","import product1Image from 'assets/img/products/product_640-1.jpg';\nimport product2Image from 'assets/img/products/product_640-2.jpg';\nimport product3Image from 'assets/img/products/product_640-3.jpg';\nimport product4Image from 'assets/img/products/product_640-4.jpg';\nimport product5Image from 'assets/img/products/product_640-5.jpg';\nimport product6Image from 'assets/img/products/product_640-6.jpg';\n\nimport user1Image from 'assets/img/users/100_1.jpg';\nimport user2Image from 'assets/img/users/100_2.jpg';\nimport user3Image from 'assets/img/users/100_3.jpg';\nimport user4Image from 'assets/img/users/100_4.jpg';\nimport user5Image from 'assets/img/users/100_5.jpg';\nimport user6Image from 'assets/img/users/100_6.jpg';\nimport user7Image from 'assets/img/users/100_7.jpg';\nimport user8Image from 'assets/img/users/100_8.jpg';\nimport user9Image from 'assets/img/users/100_9.jpg';\nimport user10Image from 'assets/img/users/100_10.jpg';\nimport user11Image from 'assets/img/users/100_11.jpg';\nimport user12Image from 'assets/img/users/100_12.jpg';\nimport user13Image from 'assets/img/users/100_13.jpg';\nimport user14Image from 'assets/img/users/100_14.jpg';\n\nexport const productsData = [\n  {\n    id: 1,\n    image: product1Image,\n    title: 'Admin Template',\n    description: 'Responsive admin template...',\n    right: '$36',\n  },\n  {\n    id: 2,\n    image: product2Image,\n    title: 'Schedule App',\n    description: 'Manage your schedule...',\n    right: '$9',\n  },\n  {\n    id: 3,\n    image: product3Image,\n    title: 'Chat App',\n    description: 'Realtime chat application...',\n    right: '$12',\n  },\n  {\n    id: 4,\n    image: product4Image,\n    title: 'Wordpress Business Theme',\n    description: 'Over 100+ templates and pages...',\n    right: '$24',\n  },\n  {\n    id: 5,\n    image: product5Image,\n    title: 'Camera App',\n    description: 'Over 30+ filter...',\n    right: '$6.99',\n  },\n  {\n    id: 6,\n    image: product6Image,\n    title: 'Calendar App',\n    description: 'Organize your schedule...',\n    right: '$0.99',\n  },\n];\n\nexport const avatarsData = [\n  {\n    avatar: user1Image,\n    name: 'Tom',\n    date: '3 month ago',\n  },\n  {\n    avatar: user2Image,\n    name: 'Jenny',\n    date: '1 year ago',\n  },\n  {\n    avatar: user3Image,\n    name: 'Sim',\n    date: '2 hour ago',\n  },\n  {\n    avatar: user4Image,\n    name: 'Christine',\n    date: 'a month ago',\n  },\n  {\n    avatar: user5Image,\n    name: 'Bread',\n    date: '6 months ago',\n  },\n  {\n    avatar: user6Image,\n    name: 'Dan',\n    date: '2 years ago',\n  },\n  {\n    avatar: user7Image,\n    name: 'Merry',\n    date: '3 month ago',\n  },\n  {\n    avatar: user8Image,\n    name: 'John',\n    date: '1 month ago',\n  },\n  {\n    avatar: user9Image,\n    name: 'Shane',\n    date: '7 month ago',\n  },\n  {\n    avatar: user10Image,\n    name: 'Star',\n    date: '1 year ago',\n  },\n  {\n    avatar: user11Image,\n    name: 'Jenny',\n    date: '3 month ago',\n  },\n  {\n    avatar: user12Image,\n    name: 'Park',\n    date: '4 month ago',\n  },\n  {\n    avatar: user13Image,\n    name: 'Dave',\n    date: '9 month ago',\n  },\n  {\n    avatar: user14Image,\n    name: 'Jackson',\n    date: '10 month ago',\n  },\n];\n\nexport const userProgressTableData = [\n  {\n    avatar: user1Image,\n    name: 'Tom',\n    date: '3 month ago',\n    progress: 75,\n  },\n  {\n    avatar: user2Image,\n    name: 'Jenny',\n    date: '1 year ago',\n    progress: 60,\n  },\n  {\n    avatar: user3Image,\n    name: 'Sim',\n    date: '2 hour ago',\n    progress: 50,\n  },\n  {\n    avatar: user4Image,\n    name: 'Christine',\n    date: 'a month ago',\n    progress: 40,\n  },\n  {\n    avatar: user5Image,\n    name: 'Bread',\n    date: '6 months ago',\n    progress: 30,\n  },\n  {\n    avatar: user6Image,\n    name: 'Dan',\n    date: '2 years ago',\n    progress: 25,\n  },\n];\n\nexport const supportTicketsData = [\n  {\n    id: 1,\n    avatar: user1Image,\n    name: 'Sim',\n    date: '30 mins ago',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'pending',\n  },\n  {\n    id: 2,\n    avatar: user2Image,\n    name: 'Jane',\n    date: '1 hour ago',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'open',\n  },\n  {\n    id: 3,\n    avatar: user3Image,\n    name: 'Tom',\n    date: 'yesterday',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'closed',\n  },\n];\n\nexport const todosData = [\n  { id: 1, title: 'task -1', done: true },\n  { id: 2, title: 'task -2', done: false },\n  { id: 3, title: 'task -3', done: true },\n  { id: 4, title: 'task -4', done: true },\n  { id: 5, title: 'task -5', done: false },\n];\n\nexport const chartjs = {\n  bar: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'Expense for this year',\n          backgroundColor: '#6a82fb',\n          stack: 'Expense',\n          data: [10000, 30000, 50000, 80000, 60000, 20000, 10000],\n        },\n        {\n          label: 'Expense for last year',\n          backgroundColor: '#fc5c7d',\n          stack: 'Expense',\n          data: [30000, 80000, 50000, 100000, 60000, 40000, 90000],\n        },\n      ],\n    },\n    options: {\n      title: {\n        display: false,\n        text: 'Chart.js Bar Chart - Stacked',\n      },\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n      },\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n            display: false,\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            display: false,\n          },\n        ],\n      },\n    },\n  },\n  doughnut: {\n    data: {\n      datasets: [\n        {\n          data: [20, 30, 40, 50, 60],\n          backgroundColor: [\n            '#6a82fb',\n            '#fc5c7d',\n            '#45b649',\n            '#00c9ff',\n            '#ffd700',\n          ],\n          label: 'Dataset 1',\n        },\n      ],\n      labels: ['Red', 'Orange', 'Yellow', 'Green', 'Blue'],\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Doughnut Chart',\n      },\n      animation: {\n        animateScale: true,\n        animateRotate: true,\n      },\n    },\n  },\n  line: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'Revenue for this year',\n          borderColor: '#6a82fb',\n          backgroundColor: '#6a82fb',\n          data: [0, 1300, 2200, 3400, 4600, 3500, 3000],\n        },\n\n        {\n          label: 'Revenue for last year',\n          borderColor: '#fc5c7d',\n          backgroundColor: '#fc5c7d',\n          data: [0, 1300, 2200, 3400, 4600, 3500, 3000],\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Line Chart - Stacked Area',\n      },\n      tooltips: {\n        intersect: false,\n        mode: 'nearest',\n      },\n      hover: {\n        mode: 'index',\n      },\n      scales: {\n        xAxes: [\n          {\n            scaleLabel: {\n              display: false,\n              labelString: 'Month',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            scaleLabel: {\n              display: false,\n              labelString: 'Value',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n      },\n    },\n  },\n};\n","import { AnnouncementCard, TodosCard } from 'components/Card';\nimport HorizontalAvatarList from 'components/HorizontalAvatarList';\nimport MapWithBubbles from 'components/MapWithBubbles';\nimport Page from 'components/Page';\nimport ProductMedia from 'components/ProductMedia';\nimport SupportTicket from 'components/SupportTicket';\nimport UserProgressTable from 'components/UserProgressTable';\nimport { IconWidget, NumberWidget } from 'components/Widget';\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\nimport {\n  avatarsData,\n  chartjs,\n  productsData,\n  supportTicketsData,\n  todosData,\n  userProgressTableData,\n} from 'demos/dashboardPage';\nimport React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport {\n  MdBubbleChart,\n  MdInsertChart,\n  MdPersonPin,\n  MdPieChart,\n  MdRateReview,\n  MdShare,\n  MdShowChart,\n  MdThumbUp,\n} from 'react-icons/md';\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport axios from 'axios'\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardDeck,\n  CardGroup,\n  CardHeader,\n  CardTitle,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from 'reactstrap';\nimport { getColor } from 'utils/colors';\n\nconst today = new Date();\nconst lastWeek = new Date(\n  today.getFullYear(),\n  today.getMonth(),\n  today.getDate() - 7,\n);\n\nvar DuraSum='' ;\nvar count = 0;\nclass DashboardPage extends React.Component {\n\n  constructor(props) {\n    var dur = '';\n    super(props);\n    this.state = {\n      PatData: [],\n      dur: '',\n      concount: 0\n    };\n\n  }\n\n  Dsum(duration,connection_count){\n    this.setState({\n      dur: duration,\n      concount: connection_count\n    })\n  }\n  componentDidMount() {\n    // this is needed, because InfiniteCalendar forces window scroll\n    window.scrollTo(0, 0);\n  \n    fetch(\"https://pv9z9cd9b0.execute-api.us-west-1.amazonaws.com/Prod/getdata\", {\n      \"method\": \"GET\"\n    })\n    .then(response => response.json())\n    .then(response => {\n      this.setState({\n        PatData: response\n      })\n      this.state.PatData.map(object => {\n        DuraSum = +DuraSum + +object.Duration;\n        count++;\n      })\n      this.Dsum(DuraSum,count);\n\n    })\n    .catch(err => { console.log(err); \n    });\n\n   \n  }\n  render() {\n    const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary'); \n    console.log(\"Dur\", this.state.dur);\n    const pd = this.state.PatData;\n    \n    return (\n\n      \n      <Page\n        className=\"DashboardPage\"\n        title=\"Hive Dashboard\"\n        // breadcrumbs={[{ name: 'Dashboard', active: false }]}\n      >\n        <Row>\n\n        \n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Total Duration Connected\"\n              subtitle=\"Today\"\n              number={this.state.dur}\n              color=\"secondary\"\n              progress=\n              {{\n                value: 75,\n                // label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"IV Disconneted\"\n              subtitle=\"Today\"\n              number={this.state.concount}\n              color=\"secondary\"\n              progress={{\n                value: 45,\n                // label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Active User Time\"\n              subtitle=\"Today\"\n              number=\"\"\n              color=\"secondary\"\n              progress={{\n                value: 90,\n                // label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Drop Rate\"\n              subtitle=\"Today\"\n              number=\"\"\n              color=\"secondary\"\n              progress={{\n                value: 60,\n                // label: 'Last month',\n              }}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                Total Conectiveity{' '}\n                <small className=\"text-muted text-capitalize\">This year</small>\n              </CardHeader>\n              <CardBody>\n                <Line data={chartjs.line.data} options={chartjs.line.options} />\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>Total Expense</CardHeader>\n              <CardBody>\n                <Bar data={chartjs.bar.data} options={chartjs.bar.options} />\n              </CardBody>\n              <ListGroup flush>\n                <ListGroupItem>\n                  <MdInsertChart size={25} color={primaryColor} /> Cost of sales{' '}\n                  <Badge color=\"secondary\">$3000</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdBubbleChart size={25} color={primaryColor} /> Management\n                  costs <Badge color=\"secondary\">$1200</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdShowChart size={25} color={primaryColor} /> Financial costs{' '}\n                  <Badge color=\"secondary\">$800</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdPieChart size={25} color={primaryColor} /> Other operating\n                  costs <Badge color=\"secondary\">$2400</Badge>\n                </ListGroupItem>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n\n        {/* <CardGroup style={{ marginBottom: '1rem' }}>\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdThumbUp}\n            title=\"50+ Likes\"\n            subtitle=\"People you like\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdRateReview}\n            title=\"10+ Reviews\"\n            subtitle=\"New Reviews\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdShare}\n            title=\"30+ Shares\"\n            subtitle=\"New Shares\"\n          />\n        </CardGroup> */}\n\n        {/* <Row>\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Products</CardHeader>\n              <CardBody>\n                {productsData.map(\n                  ({ id, image, title, description, right }) => (\n                    <ProductMedia\n                      key={id}\n                      image={image}\n                      title={title}\n                      description={description}\n                      right={right}\n                    />\n                  ),\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Users</CardHeader>\n              <CardBody>\n                <UserProgressTable\n                  headers={[\n                    <MdPersonPin size={25} />,\n                    'name',\n                    'date',\n                    'participation',\n                    '%',\n                  ]}\n                  usersData={userProgressTableData}\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row> */}\n\n        {/* <Row>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Sales\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [10000, 15000, 5000, 10000, 5000, 10000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Revenue\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000].reverse(),\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute', right: 0 }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Profit\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row> */}\n\n        {/* <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <InfiniteCalendar\n              selected={today}\n              minDate={lastWeek}\n              width=\"100%\"\n              theme={{\n                accentColor: primaryColor,\n                floatingNav: {\n                  background: secondaryColor,\n                  chevron: primaryColor,\n                  color: '#FFF',\n                },\n                headerColor: primaryColor,\n                selectionColor: secondaryColor,\n                textColor: {\n                  active: '#FFF',\n                  default: '#333',\n                },\n                todayColor: secondaryColor,\n                weekdayColor: primaryColor,\n              }}\n            />\n          </Col>\n\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card inverse className=\"bg-gradient-primary\">\n              <CardHeader className=\"bg-gradient-primary\">\n                Map with bubbles\n              </CardHeader>\n              <CardBody>\n                <MapWithBubbles />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <CardDeck style={{ marginBottom: '1rem' }}>\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n            />\n          </Card>\n\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n              reversed\n            />\n          </Card>\n        </CardDeck>\n\n        <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <AnnouncementCard\n              color=\"gradient-secondary\"\n              header=\"Announcement\"\n              avatarSize={60}\n              name=\"Jamy\"\n              date=\"1 hour ago\"\n              text=\"Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy euismod tinciduntut laoreet doloremagna\"\n              buttonProps={{\n                children: 'show',\n              }}\n              style={{ height: 500 }}\n            />\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <span>Support Tickets</span>\n                  <Button>\n                    <small>View All</small>\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardBody>\n                {supportTicketsData.map(supportTicket => (\n                  <SupportTicket key={supportTicket.id} {...supportTicket} />\n                ))}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <TodosCard todos={todosData} />\n          </Col> */}\n        <Row>\n          <table className=\"table table-striped\">\n              <thead>\n                  <tr>\n                      <th>TimeStamp</th>\n                      <th>Connection_Start</th>\n                      <th>Connection_Stop</th>\n                      <th>Duration</th>\n                  </tr>\n              </thead>\n              <tbody>\n                  {Array.isArray(pd) && pd.map(friend => {\n                      return <tr key={friend.ts}>\n                          <td>{friend.ts}</td>\n                          <td>{friend.Connection_Start}</td>\n                          <td>{friend.Disconnected_At}</td>\n                          <td>{friend.Duration}</td>\n                      </tr>\n                  })}\n              </tbody>\n          </table>\n\n        </Row>\n      </Page>\n    );\n  }\n}\n\n\n\n\nexport default DashboardPage;\n"],"sourceRoot":""}